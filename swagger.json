{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a complete Documentation for HellBz's API\n",
    "version" : "1.0.0",
    "title" : "HellBz API Documentation",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "coding@hellbz.de"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "api.hellbz.deasedgheasrga",
  "basePath" : "/",
  "tags" : [ {
    "name" : "arma"
  }, {
    "name" : "images"
  }, {
    "name" : "moe"
  }, {
    "name" : "scum"
  }, {
    "name" : "steam"
  }, {
    "name" : "teamspeak",
    "description" : "All about Teamspak 3"
  }, {
    "name" : "twitch"
  }, {
    "name" : "valheim"
  }, {
    "name" : "wot"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/arma/bridge/?bridge={bridge}" : {
      "get" : {
        "tags" : [ "arma" ],
        "summary" : "Generate Bridge Editor Code",
        "description" : "Return a JSON, ready for execute in Arma Editor",
        "operationId" : "Generate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bridge",
          "in" : "query",
          "description" : "You can Use the Following  <br> - / _ for straight Street<br>/ for Upwards<br>\\ for downwards<br>P for Pillars<br>E for Editor Export",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "/arma/bridge/img.php?bridge={bridge}" : {
      "get" : {
        "tags" : [ "arma" ],
        "summary" : "Generate pure HTML for Frames",
        "description" : "Return a complete HTML for Frames",
        "operationId" : "GenerateImg",
        "produces" : [ "application/html" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "/arma/convertsqf/getbeidizip.php" : {
      "post" : {
        "tags" : [ "arma" ],
        "summary" : "Convert SQF-Mission to BEIDI-Mission",
        "operationId" : "addPet",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/force-download" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Send Mission-Name and RAW-SQF for converting",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/convertsqf"
          }
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "convertsqf" : {
      "type" : "object",
      "properties" : {
        "mission" : {
          "type" : "string",
          "example" : "balota"
        },
        "rawsqf" : {
          "type" : "string",
          "example" : "test"
        }
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Category"
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "userStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Status"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Tag"
      }
    },
    "Pet" : {
      "type" : "object",
      "required" : [ "name", "photoUrls" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "name" : {
          "type" : "string",
          "example" : "doggie"
        },
        "photoUrls" : {
          "type" : "array",
          "xml" : {
            "name" : "photoUrl",
            "wrapped" : true
          },
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "pet status in the store",
          "enum" : [ "available", "pending", "sold" ]
        }
      },
      "xml" : {
        "name" : "Pet"
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Model" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}